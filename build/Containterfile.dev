##"mcr.microsoft.com/devcontainers/python:1-3.12"

FROM docker.io/ubuntu:latest

#RUN microdnf -y install which socat shadow-utils nano git tar python3.11 python3.11-pip python3.11-setuptools python3.11-wheel && alternatives --install /usr/bin/pip pip /usr/bin/pip3.11 1 && alternatives --install /usr/bin/python python /usr/bin/python3.11 1 && microdnf clean all

#RUN python3.11 -m pip install uv


#RUN uv sync

#RUN uv pip install --editable .


#ENV GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no"

RUN apt-get update -y \
    && apt-get install -y libgl1 libglib2.0-0 curl wget git procps tar \
    && apt-get update -y \
    && apt-get upgrade -y \
    && apt-get install -y software-properties-common \
    && add-apt-repository -y ppa:deadsnakes/ppa \
    && apt install -y python3.11 \
    && apt install -y python3-pip \
    && apt install -y python3.11-venv \
    && rm -rf /var/lib/apt/lists/*


RUN python3 -m venv docling 
RUN source docling/bin/activate 

#RUN python3.11 -m pip install --upgrade pip


# # This will install torch with *only* cpu support
# # Remove the --extra-index-url part if you want to install all the gpu requirements
# # For more details in the different torch distribution visit https://pytorch.org/.
RUN docling/bin/pip3 install --no-cache-dir docling --extra-index-url https://download.pytorch.org/whl/cpu


ENV HF_HOME=/tmp/
ENV TORCH_HOME=/tmp/

# #COPY docs/examples/minimal.py /root/minimal.py

RUN docling-tools models download

# # On container environments, always set a thread budget to avoid undesired thread congestion.
# ENV OMP_NUM_THREADS=4

# # On container shell:
# # > cd /root/
# # > python minimal.py

# # Running as `docker run -e DOCLING_ARTIFACTS_PATH=/root/.cache/docling/models` will use the
# # model weights included in the container image.
